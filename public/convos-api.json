{
  "swagger": "2.0",
  "info": {
    "version": "0.87",
    "title": "Convos API specification",
    "description": "This document describes the API for Convos, a multiuser persistent IRC proxy with web interface.",
    "contact": {
      "name": "Convos",
      "url": "https://github.com/Nordaaker/convos"
    },
    "license": {
      "name": "Artistic License version 2.0",
      "url": "http://opensource.org/licenses/Artistic-2.0"
    },
    "termsOfService": "SSL (HTTPS) is highly suggested, since login credentials and session cookies are transmitted over this API."
  },
  "host": "demo.convos.by",
  "basePath": "/api",
  "schemes": [ "http" ],
  "parameters": {
    "connection_id": {
      "name": "connection_id",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "A unique connection identifier"
    },
    "dialog_id": {
      "name": "dialog_id",
      "in": "path",
      "default": "",
      "x-mojo-placeholder": "#",
      "required": true,
      "type": "string",
      "description": "The name of the person or room"
    },
    "ident": {
      "name": "ident",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "User email or server identity"
    }
  },
  "paths": {
    "/embed": {
      "get": {
        "tags": [],
        "summary": "Get information from a URL",
        "operationId": "embed",
        "x-mojo-to": "url#info",
        "parameters": [
          { "name": "url", "in": "query", "required": true, "type": "string", "description": "URL to resource" }
        ],
        "responses": {
          "200": {
            "description": "Information about resource."
          },
          "default": {
            "description": "Error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/connection/{connection_id}": {
      "delete": {
        "tags": [ "connection" ],
        "summary": "Delete a connection and all assosiated data.",
        "operationId": "removeConnection",
        "x-mojo-to": "connection#remove",
        "parameters": [
          { "$ref": "#/parameters/connection_id" }
        ],
        "responses": {
          "200": {
            "description": "Remove a connection.",
            "schema": { "$ref": "#/definitions/Success" }
          },
          "default": {
            "description": "Error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      },
      "post": {
        "tags": [ "connection" ],
        "summary": "Update a connection.",
        "operationId": "updateConnection",
        "x-mojo-to": "connection#update",
        "parameters": [
          { "$ref": "#/parameters/connection_id" },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "on_connect_commands": { "type": "array", "description": "Commands to be run after the connection is established", "items": { "type": "string" } },
                "url": { "type": "string", "format": "uri", "description": "Example: irc://user:pass@irc.perl.org?nick=superman" },
                "wanted_state": { "type": "string", "enum": ["connected", "disconnected"], "description": "Connection state" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update a connection.",
            "schema": { "$ref": "#/definitions/Connection" }
          },
          "default": {
            "description": "Error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/connection/{connection_id}/last-read": {
      "post": {
        "tags": [ "connection" ],
        "summary": "Set 'last_read' for a connection dialog.",
        "operationId": "setConnectionLastRead",
        "x-mojo-to": "dialog#last_read",
        "parameters": [
          { "$ref": "#/parameters/connection_id" }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "last_read": { "type": "string", "format": "date-time" }
              }
            }
          },
          "default": {
            "description": "Internal server error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/connection/{connection_id}/messages": {
      "get": {
        "tags": [ "dialog" ],
        "summary": "Get a list of messages.\n\nNote: this resource require the user to be authenticated first.",
        "operationId": "connectionMessages",
        "x-mojo-to": "dialog#messages",
        "parameters": [
          { "$ref": "#/parameters/connection_id" },
          { "name": "after", "in": "query", "type": "string", "format": "date-time", "description": "Find messages after a given ISO 8601 timestamp" },
          { "name": "before", "in": "query", "type": "string", "format": "date-time", "description": "Find messages before a given ISO 8601 timestamp" },
          { "name": "limit", "in": "query", "type": "integer", "description": "Max number of messages to retrieve" },
          { "name": "match", "in": "query", "type": "string", "description": "Messages must match this string" }
        ],
        "responses": {
          "200": {
            "description": "List of messages.",
            "schema": {
              "type": "object",
              "properties": {
                "end": { "type": "boolean", "description": "Indicates if historic messages can be received." },
                "messages": { "type": "array", "items": { "$ref": "#/definitions/Message" } }
              }
            }
          },
          "default": {
            "description": "Internal server error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/connection/{connection_id}/dialog/{dialog_id}/last-read": {
      "post": {
        "tags": [ "dialog" ],
        "summary": "Set 'last_read' for a dialog.",
        "operationId": "setDialogLastRead",
        "x-mojo-to": "dialog#last_read",
        "parameters": [
          { "$ref": "#/parameters/connection_id" },
          { "$ref": "#/parameters/dialog_id" }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "last_read": { "type": "string", "format": "date-time" }
              }
            }
          },
          "default": {
            "description": "Internal server error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/connection/{connection_id}/dialog/{dialog_id}/messages": {
      "get": {
        "tags": [ "dialog" ],
        "summary": "Get a list of messages.\n\nNote: this resource require the user to be authenticated first.",
        "operationId": "dialogMessages",
        "x-mojo-to": "dialog#messages",
        "parameters": [
          { "$ref": "#/parameters/connection_id" },
          { "$ref": "#/parameters/dialog_id" },
          { "name": "after", "in": "query", "type": "string", "format": "date-time", "description": "Find messages after a given ISO 8601 timestamp" },
          { "name": "before", "in": "query", "type": "string", "format": "date-time", "description": "Find messages before a given ISO 8601 timestamp" },
          { "name": "limit", "in": "query", "type": "integer", "description": "Max number of messages to retrieve" },
          { "name": "match", "in": "query", "type": "string", "description": "Messages must match this string" }
        ],
        "responses": {
          "200": {
            "description": "List of messages.",
            "schema": {
              "type": "object",
              "properties": {
                "end": { "type": "boolean", "description": "Indicates if historic messages can be received." },
                "messages": { "type": "array", "items": { "$ref": "#/definitions/Message" } }
              }
            }
          },
          "default": {
            "description": "Internal server error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/connection/{connection_id}/dialog/{dialog_id}/participants": {
      "get": {
        "tags": [ "dialog" ],
        "summary": "Get a list of participants.\n\nNote: this resource require the user to be authenticated first.",
        "operationId": "participants",
        "x-mojo-to": "dialog#participants",
        "parameters": [
          { "$ref": "#/parameters/connection_id" },
          { "$ref": "#/parameters/dialog_id" }
        ],
        "responses": {
          "200": {
            "description": "List of participants.",
            "schema": {
              "type": "object",
              "required" : ["participants"],
              "properties": {
                "participants": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required" : ["name"],
                    "properties": {
                      "mode": { "type": "string" },
                      "name": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Internal server error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/connections": {
      "get": {
        "tags": [ "connection" ],
        "summary": "Get all the connections for a user.",
        "operationId": "listConnections",
        "x-mojo-to": "connection#list",
        "responses": {
          "200": {
            "description": "List of connections.",
            "schema": {
              "type": "object",
              "properties": {
                "connections": { "type": "array", "items": { "$ref": "#/definitions/Connection" } }
              }
            }
          },
          "default": {
            "description": "Error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      },
      "post": {
        "tags": [ "connection" ],
        "summary": "Add a connection.",
        "operationId": "createConnection",
        "x-mojo-to": "connection#create",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["url"],
              "properties": {
                "on_connect_commands": { "type": "array", "description": "Commands to be run after the connection is established", "items": { "type": "string" } },
                "url": { "type": "string", "description": "Example: irc://user:pass@irc.perl.org?nick=superman" },
                "wanted_state": { "type": "string", "enum": ["connected", "disconnected"], "description": "Connection state" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Connection information.",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          },
          "default": {
            "description": "Error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/dialogs": {
      "get": {
        "tags": [ "dialog" ],
        "summary": "Get a list of all dialogs.",
        "operationId": "listDialogs",
        "x-mojo-to": "dialog#list",
        "responses": {
          "200": {
            "description": "List of messages.",
            "schema": {
              "type": "object",
              "properties": {
                "dialogs": {
                  "type": "array", "items": { "$ref": "#/definitions/Dialog" }
                }
              }
            }
          },
          "default": {
            "description": "Internal server error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "tags": [ "chat" ],
        "summary": "Get list of notications.",
        "description": "A notification is added once your name is mentioned in a chat.",
        "operationId": "listNotifications",
        "x-mojo-to": "notifications#list",
        "responses": {
          "200": {
            "description": "List of notifications.",
            "schema": {
              "type": "object",
              "properties": {
                "notifications": { "type": "array", "items": { "$ref": "#/definitions/Notification" } }
              }
            }
          },
          "default": {
            "description": "Error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/notifications/read": {
      "post": {
        "tags": [ "chat" ],
        "summary": "Mark notications as read.",
        "description": "TODO: Notification count vs red/green toggling of a single notification.",
        "operationId": "readNotifications",
        "x-mojo-to": "notifications#read",
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "Error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/user": {
      "delete": {
        "tags": [ "user" ],
        "summary": "Delete a user.",
        "operationId": "deleteUser",
        "x-mojo-to": "user#delete",
        "responses": {
            "200": {
            "description": "Successfully deleted.",
            "schema": { "$ref": "#/definitions/Success" }
          },
          "default": {
            "description": "Error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      },
      "get": {
        "tags": [ "user" ],
        "summary": "Get user data.",
        "operationId": "getUser",
        "x-mojo-to": "user#get",
        "parameters": [
          { "name": "connections", "in": "query", "type": "boolean", "description": "Retrieve connection list." },
          { "name": "dialogs", "in": "query", "type": "boolean", "description": "Retrieve dialog list." },
          { "name": "notifications", "in": "query", "type": "boolean", "description": "Retrieve notifications list." }
        ],
        "responses": {
          "200": {
            "description": "User profile.",
            "schema": { "$ref": "#/definitions/User" }
          },
          "default": {
            "description": "Error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      },
      "post": {
        "tags": [ "user" ],
        "summary": "Update an existing user.",
        "operationId": "updateUser",
        "x-mojo-to": "user#update",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": { "type": "string", "description": "User password" }
              }
            }
          }
        ],
        "responses": {
            "200": {
            "description": "User profile.",
            "schema": { "$ref": "#/definitions/User" }
          },
          "default": {
            "description": "Error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [ "user" ],
        "summary": "Log in a user based on email and password.",
        "operationId": "loginUser",
        "x-mojo-to": "user#login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email", "password"],
              "properties": {
                "email": { "type": "string", "format": "email", "description": "User email" },
                "password": { "type": "string", "description": "User password" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile.",
            "schema": { "$ref": "#/definitions/User" }
          },
          "default": {
            "description": "Error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [ "user" ],
        "summary": "Logout a user.",
        "description": "This resource will delete any sessions cookies that might be stored in the client.",
        "operationId": "logoutUser",
        "x-mojo-to": "user#logout",
        "responses": {
          "200": {
            "description": "Successfully logged out.",
            "schema": { "$ref": "#/definitions/Success" }
          },
          "default": {
            "description": "Error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [ "user" ],
        "summary": "Register a new user.",
        "operationId": "registerUser",
        "x-mojo-to": "user#register",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email", "password"],
              "properties": {
                "email": { "type": "string", "format": "email", "description": "User email" },
                "invite_code": { "type": "string", "description": "Secret invite code set on server side." },
                "password": { "type": "string", "description": "User password" }
              }
            }
          }
        ],
        "responses": {
            "200": {
            "description": "User profile.",
            "schema": { "$ref": "#/definitions/User" }
          },
          "default": {
            "description": "Error.",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    }
  },
  "definitions": {
    "Connection": {
      "required": ["connection_id", "url"],
      "properties": {
        "connection_id": { "type": "string", "description": "Unique identifier for this connection" },
        "name": { "type": "string", "description": "Name for this connection" },
        "on_connect_commands": { "type": "array", "description": "Commands to be run after the connection is established", "items": { "type": "string" } },
        "state": { "type": "string", "enum": ["connected", "queued", "disconnected"], "description": "Actual connection state" },
        "url": { "type": "string", "format": "uri", "description": "Example: irc://user:@irc.perl.org?nick=superman (Note: Without password)" },
        "wanted_state": { "type": "string", "enum": ["connected", "disconnected"], "description": "Wanted connection state" }
      }
    },
    "Dialog": {
      "required": ["connection_id", "dialog_id", "last_read", "name", "unread"],
      "properties": {
        "connection_id": { "type": "string", "description": "Unique identifier for the connection this dialog is part of" },
        "dialog_id": { "type": "string", "description": "Unique identifier for the dialog" },
        "last_active": { "type": "string", "format": "date-time" },
        "last_read": { "type": "string", "format": "date-time" },
        "name": { "type": "string", "description": "Name of the room or person" },
        "topic": { "type": "string", "description": "The subjec/topic for this room" },
        "unread": { "type": "integer", "description": "Number of unread messages" }
      }
    },
    "Error": {
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "required": ["message"],
            "properties": {
              "message": { "type": "string", "description": "Human readable description of the error" },
              "path": { "type": "string", "description": "JSON pointer to the input data where the error occur" }
            }
          }
        }
      }
    },
    "Message": {
      "required": ["message", "from", "ts"],
      "properties": {
        "from": { "type": "string", "description": "Identifier for who sent this message" },
        "message": { "type": "string", "description": "The message" },
        "ts": { "type": "string", "format": "date-time", "description": "Example: 2015-09-06T13:49:37Z" }
      }
    },
    "Notification": {
      "required": ["message", "from", "ts"],
      "properties": {
        "connection_id": { "type": "string", "description": "Unique identifier for the connection this notification came from" },
        "dialog_id": { "type": "string", "description": "Dialog ID" },
        "from": { "type": "string", "description": "Identifier for who sent this message" },
        "message": { "type": "string", "description": "The message" },
        "ts": { "type": "string", "format": "date-time", "description": "Example: 2015-09-06T13:49:37Z" }
      }
    },
    "Success": {
      "properties": {
        "message": { "type": "string", "description": "Human readable description" }
      }
    },
    "User": {
      "required": ["email", "unread"],
      "properties": {
        "email": { "type": "string", "description": "Unique email identifying a user in Convos" },
        "registered": { "type": "string", "format": "date-time", "description": "Example: 2015-09-06T10:47:31Z" },
        "unread": { "type": "integer", "description": "Number of unread notifications" },
        "highlight_keywords": {
          "description": "Extra keywords to highlight on",
          "type": "array",
          "items": { "type": "string" }
        },
        "connections": {
          "type": "array",
          "items": { "$ref": "#/definitions/Connection" }
        },
        "dialogs": {
          "type": "array",
          "items": { "$ref": "#/definitions/Dialog" }
        }
      }
    }
  }
}
